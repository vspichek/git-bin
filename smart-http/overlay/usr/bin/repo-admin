#!/bin/bash
#GIT repo admin script for gitbox

set -e

GROUP="git"
REPO="/repos"

showhelp() {
cat >&2 << EOF
╔═══════════════════════════════════════════════════════════╗
║ Usage:                                                    ║
╠═══════════════════════════════════════════════════════════╣
║ List:               repo-admin -l                         ║
║ Create new empty:   repo-admin -n <repo> -d <description> ║
║ Clone from URL:     repo-admin -c <url>                   ║
║ Remove:             repo-admin -r <repo>                  ║
╚═══════════════════════════════════════════════════════════╝
EOF
}

sflog() {
    echo $*
}

sferror() {
    echo $*
    exit 1
}

repo-chmown() {
    [ -d ${REPO} ] || sferror "${REPO} not found"

    chgrp -R ${GROUP} ${REPO}
    chmod -R g+w ${REPO}
    find ${REPO} -type d | xargs chmod g+s
}

repo-list() {
    ls ${REPO}
}

repo-new() {
    if git init --bare --shared $REPO/$NEW; then
        echo $DESC > $REPO/$NEW/description
        repo-chmown
        sflog "Created new repository ${NEW} in ${REPO}"
    else
        sferror "Error creating ${NEW} in ${REPO}"
    fi
}

repo-clone() {
    repo-chmown
    CLONE="$(echo "$(echo "$URL" | grep / | cut -d/ -f $(($(grep -o '/' <<< "$1" | wc -l)+1)) -)")"
    if git clone --bare --shared $1 $REPO/$CLONE/; then
        echo "Cloned from $1" > $REPO/$CLONE/description
        repo-chmown
        sflog "Cloned repository $1 in ${REPO}"
    else
        sferror "Error cloning ${1} in ${REPO}"
    fi
}

repo-remove() {
    rm -rf $REPO/$1
    sflog "Removed repository $1 in ${REPO}"
}

#parse arguments
while getopts ":vln:d:c:r:" opt; do
    case "${opt}" in
        v)
            repo-chmown
            sflog "Initialized ${REPO}"
            exit 0
            ;;
        l)
            repo-list
            exit 0
            ;;
        n)
            if [[ ${OPTARG} =~ ^- ]]; then
                sferror "Bad argument string"
            fi
            NEW=${OPTARG}
            #if $DESC has already been parsed
            if [ ! -z ${DESC+x} ]; then
                repo-new
                exit 0
            fi
            ;;
        d)
            if [[ ${OPTARG} =~ ^- ]]; then
                sferror "Bad argument string"
            fi
            DESC=${OPTARG}
            #if $NEW has already been parsed
            if [ ! -z ${NEW+x} ]; then
                repo-new
                exit 0
            fi
            ;;
        c)
            [[ ${OPTARG} =~ ^- ]] && sferror "Bad argument string"
            repo-clone ${OPTARG}
            exit 0
            ;;
        r)
            [[ ${OPTARG} =~ ^- ]] && sferror "Bad argument string"
            repo-remove ${OPTARG} 
            exit 0
            ;;
    esac
done

if [ ! -z ${NEW+x} ] || [ ! -z ${DESC+x} ]; then
    sferror "Both -n and -d must be specified"
fi

showhelp
exit 0
